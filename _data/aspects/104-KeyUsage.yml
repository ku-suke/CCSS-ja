###################################################
#
#  CryptoCurrency Security Standard (CCSS)
#
#  Copyright (c) 2016, CryptoCurrency Certification Consortium (C4)
#
###################################################

id: 1.04
title: 暗号鍵の利用
file: 104-KeyUsage

category: 暗号資産管理

description: >
  この観点は、秘密鍵の機密性と資金の完全性への危険性を最小限に抑え、安全に暗号鍵・シードを使用する方法を対象としています。 このセクションでは、主な暗号鍵が失われた・破損した・アクセスできない場合にのみ使用されるバックアップ用暗号鍵の使用については説明しません。悪質なシグネチャの脆弱性（例：「R」値の再利用）、マルウェアによる暗号鍵のコピーまたは改ざんの可能性、正当なアクセス件を使用して許可されていないトランザクションを送信する悪意のある内部者など、送金時の暗号鍵の利用には資金の損失を招く可能性のある様々なリスクが存在します。

level_one:
  - 主な[暗号鍵](#key)・[シード](#seed) へのアクセスには、識別子（例えば、ユーザ名、電子メール、GUIDなど） と、許可されたオペレータへのアクセスを制限する少なくとも2つの[要素による認証](#authentication-factor) が必要です。 Google Authenticatorトークン、秘密鍵からのデジタル署名、個人IDの確認、物理的な鍵またはトークンの所有、または鍵所有者の信頼性を遠隔から証明できる代理組織が認証の追加要因の例として挙げられます。
  - すべての[暗号鍵](#key)・[シード](#seed) は、[信頼できる環境](#trusted-environment) でのみ使用されます。これにより、マルウェアによる不正コピーのリスクを軽減し、マシン上に暗号鍵がのこることで（たとえ不注意でも）別のユーザーや侵入者がそのキーを回復できるリスクを軽減します。効果的な[信頼できる環境](#trusted-environment)は、権限のない人が秘密鍵、パスワード、またはその他の機密情報を覚えるのを防ぎます。
  - 組織の[暗号鍵](#key)・[シード](#seed) のいずれかを保持することが許可される前に、すべての担当者がリファレンスチェックを受けます。これは、その人の過去について真実であり、組織にリスクをもたらす理由により以前の職場から解雇されていないことを信用するのに役立ちます。
  - 同一の[マルチシグ](#multisig) ウォレットの2つの主な[暗号鍵](#key)・[シード](#seed) は、同じデバイス上に存在することはありません。同一ウォレットの2つの鍵を1つのデバイスに配置することで、悪意のあるオペレータまたは悪意のあるソフトウェアによる情報漏洩が起こりえます。ウォレットのすべての鍵が独立したデバイス上で使用されるようにすることで、これらのリスクが軽減され、セキュリティが強化されます。
  - デジタル[署名](#signature)では、決して繰り返されない「k」値を使用する必要があります。 これは、[NIST SP 800-90A](http://http://csrc.nist.gov/publications/nistpubs/800-90A/SP800-90A.pdf) に準拠した[決定論的乱数生成器](#drbg) ( Deterministic Random Bit Generator; DRBG )、または[RFC 6979](https://tools.ietf.org/html/rfc6979) と互換性のある決定論的スキームを使用することで実現できます。強力な[エントロピー](#entropy) 源を使用することで、攻撃者が署名を計算するために使用された秘密鍵を回復できる「汚れた署名」の脆弱性を防ぐことができます。 この一般的な実装は、一般的なオペレーティングシステムによって提供される[疑似乱数生成器](#prng) (pseudo-random number generator・PRNG)、またはRFC 6979準拠のスキームを使用することです。

level_two:
  - すべての組織の暗号鍵保有者は、自分が誰であるかを確実にするために身元確認を受けています。 これにより、偽装やソーシャルエンジニアリング攻撃よる組織や顧客の資金にアクセスするリスクが軽減されます。
  - 資金の送付先と金額の確認は[暗号鍵](#key)・[シード](#seed)を使用する前に[承認された連絡チャネル](#authenticated-communication-channel)を介して行われます。 これは、人によって適切な送金先[アドレス](#address)/人/会社に正しい金額を送付しようとしているか検証したり、システムによって事前に定めたホワイトリストや制限金額以内であるかを自動的に検証して署名することで実現します。[デジタル署名](#signature) されたアドレスを提供する支払いプロトコルの実装、または暗号化アドレスの代わりに画像やビジネス名を表示するシステムの使用は、この検証プロセスを大幅に単純化します。

level_three:
  - 暗号鍵・シードへのアクセスには、識別子（たとえば、ユーザー名、電子メール、GUIDなど）と、少なくとも3つの他の[認証要素](#authentication-factor) が必要です。レベルIの2つの追加要素の要件と同様に、レベルIIIの他の3つの認証要素は、許可されたユーザーの識別情報の確認を提供する任意の形式をとることができます。
  - すべての組織のは[暗号鍵](#key)・[シード](#seed)保有者は、法執行人または調査会社によって行われたバックグラウンドチェックを受けています。 これにより、[暗号鍵](#key)・[シード](#seed)保有者は、組織やユーザーの送金に署名する権限を持っていれば、組織に対するリスク行為などの証拠がなく、その人が本人であることが保証されます。

components:
  - component: &010401
    id: 1.4.1
    title_short: 鍵アクセスの多要素認証
    uncertified: 暗号鍵やシードへのアクセスに、十分なセキュリティを満たす認証方法を提供できていない
    level_one: 暗号鍵・シードへのアクセスには、識別子とともに２つの要素 (パスワード、MFAトークン、警備員による確認、IPアドレスホワイトリスト、安全な保管庫にアクセスできる物理鍵、別の認証組織)での認証が必要
    level_two: 暗号鍵・シードへのアクセスには、識別子とともに２つの要素 (パスワード、MFAトークン、警備員による確認、IPアドレスホワイトリスト、安全な保管庫にアクセスできる物理鍵、別の認証組織)での認証が必要
    level_three: 暗号鍵・シードへのアクセスには、識別子とともに３つの要素 (パスワード、MFAトークン、警備員による確認、IPアドレスホワイトリスト、安全な保管庫にアクセスできる物理鍵、別の認証組織)での認証が必要
  - component: &010402
    id: 1.4.2
    title_short: 暗号鍵の信頼できる環境での使用
    uncertified: 暗号鍵・シードは公共のあるいは信用できないマシン、あるいはパスワードやシークレットが漏洩する環境で実行される
    level_one: 暗号鍵・シードは信頼できる環境でしか使用されない
    level_two: 暗号鍵・シードは信頼できる環境でしか使用されない
    level_three: 暗号鍵・シードは信頼できる環境でしか使用されない
  - component: &010403
    id: 1.4.3
    title_short: オペレーターのリファレンスチェック
    uncertified: 暗号鍵・シード保有者に対してチェックを行っていない
    level_one: 暗号鍵・シード保有者はリファレンスチェック済み
    level_two: 暗号鍵・シード保有者はリファレンスチェック済み
    level_three: 暗号鍵・シード保有者はリファレンスチェック済み
  - component: &010404
    id: 1.4.4
    title_short: オペレーターの本人確認
    uncertified: 一人以上のオペレーターの本人確認ができていない
    level_one: 暗号鍵・シード保有者は本人確認済み
    level_two: 暗号鍵・シード保有者は本人確認済み
    level_three: 暗号鍵・シード保有者は本人確認済み
  - component: &010405
    id: 1.4.5
    title_short: オペレーターのバックグラウンドチェック
    uncertified:
    level_one:
    level_two:
    level_three: 暗号鍵・シード保有者はバックグラウンドチェック済み
  - component: &010406
    id: 1.4.6
    title_short: 署名前の送金確認
    uncertified:
    level_one:
    level_two: 暗号鍵を使用する前に金額と送金先が正しいことを確認している
    level_three: 暗号鍵を使用する前に金額と送金先が正しいことを確認している
  - component: &010407
    id: 1.4.7
    title_short: 複数署名鍵の一か所への保存
    uncertified: 単一の資産に対する暗号鍵が１つのデバイスに保存されている
    level_one: 単一のウォレットに紐づく２つの鍵は同一デバイスに保管されていない
    level_two: 単一のウォレットに紐づく２つの鍵は同一デバイスに保管されていない
    level_three: 単一のウォレットに紐づく２つの鍵は同一デバイスに保管されていない
  - component: &010408
    id: 1.4.8
    title_short: DRBG 準拠
    uncertified: 署名は"汚れた署名"を引き起こす可能性のあるDRBGに準拠していないものを使用している
    level_one: >
      デジタル署名中の「K値」はNIST SP 800-90A準拠のDRBGを使用して生成される
      または、
      「K値」はRFC 6979に従い決定論的に生成される
    level_two: >
      デジタル署名中の「K値」はNIST SP 800-90A準拠のDRBGを使用して生成される
      または、
      「K値」はRFC 6979に従い決定論的に生成される
    level_three: >
      デジタル署名中の「K値」はNIST SP 800-90A準拠のDRBGを使用して生成される
      または、
      「K値」はRFC 6979に従い決定論的に生成される
